@model Wellcome.Dds.AssetDomain.Workflow.WorkflowJob

@{
    if (!Model.Created.HasValue)
    {
        ViewBag.Title = "b number not called";
    }
    else
    {
        ViewBag.Title = "Workflow call for " + Model.Identifier;
    }
}

    @if (TempData["new-workflow-job"] != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Success!</strong> Workflow Job created.
        </div>
    }
    @if (TempData["new-workflow-job-error"] != null)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Failed to create new workflow job!</strong> @TempData["new-workflow-job-error"]
        </div>
    }

@if (!Model.Created.HasValue)
{
    <h2>No DDS Call found for @Model.Identifier</h2>
}
else
{
    <h2>Workflow call for @Model.Identifier</h2>
}

<ul class="list-group">
    <li class="list-group-item"><a href="@Url.Action("Create", "WorkflowCall", new {id = Model.Identifier})"><span class="glyphicon glyphicon-bullhorn"></span> Simulate Workflow Call</a></li>
    <li class="list-group-item">@Html.ActionLink("DDS View of " + @Model.Identifier, "Manifestation", "Dash", new {id = @Model.Identifier}, new {})</li>
    <li class="list-group-item"><a href="@Url.Action("StorageManifest", "Peek", new {id = Model.Identifier})">Storage Manifest</a></li>
    <li class="list-group-item"><a href="@Url.Action("XmlView", "Peek", new {id = Model.Identifier, parts = Model.Identifier + ".xml"})">METS file</a></li>
</ul>
<ul class="list-group">
    <li class="list-group-item">@Html.ActionLink("Show Recent Calls", "Recent", "WorkflowCall")</li>
</ul>

@if (Model.Created.HasValue)
{
    <table class="table">
        <thead>
        <tr>
            <th>Property</th>
            <th>Value</th>
        </tr>
        </thead>
        <tbody>
            <tr>
                <td>B Number</td>
                <td>@Model.Identifier</td>
            </tr>
            <tr>
                <td>Force text</td>
                <td>@Model.ForceTextRebuild</td>
            </tr>
            <tr>
                <td>Created</td>
                <td>@StringUtils.GetFriendlyAge(Model.Created)</td>
            </tr>
            <tr>
                <td>Taken</td>
                <td>@StringUtils.GetFriendlyAge(Model.Taken)</td>
            </tr>
            <tr>
                <td>Waiting</td>
                <td>@Model.Waiting</td>
            </tr>
            <tr>
                <td>Finished</td>
                <td>@Model.Finished</td>
            </tr>
            <tr>
                <td>Job options</td>
                <td>@Html.Raw(String.Join("<br/>",((RunnerOptionsFlags)Model.WorkflowOptions.GetValueOrDefault()).ToString().Split(',')))</td>
            </tr>
            <tr>
                <td>First DLCS Job ID</td>
                <td>@Html.ActionLink(Model.FirstDlcsJobId.ToString(), "Index", "Job", new { id = Model.FirstDlcsJobId }, new { })</td>
            </tr>
            <tr>
                <td>DLCS Job Count</td>
                <td>@Model.DlcsJobCount</td>
            </tr>
            <tr>
                <td>Word Count</td>
                <td>@Model.Words</td>
            </tr>
            <tr>
                <td>Expected Texts</td>
                <td>@Model.ExpectedTexts</td>
            </tr>
            <tr>
                <td>Texts already on disk</td>
                <td>@Model.TextsAlreadyOnDisk</td>
            </tr>
            <tr>
                <td>Texts built</td>
                <td>@Model.TextsBuilt</td>
            </tr>
            <tr>
                <td>Annotation pages already on disk</td>
                <td>@Model.AnnosAlreadyOnDisk</td>
            </tr>
            <tr>
                <td>Annotation pages built</td>
                <td>@Model.AnnosBuilt</td>
            </tr>
            <tr>
                <td>Package build time</td>
                <td>@Model.PackageBuildTime</td>
            </tr>
            <tr>
                <td>Text and anno build time</td>
                <td>@Model.TextAndAnnoBuildTime</td>
            </tr>
            <tr>
                <td>Total time</td>
                <td>@Model.TotalTime</td>
            </tr>
            <tr>
                <td>Error</td>
                <td>@Model.Error</td>
            </tr>
        </tbody>
    </table>
}